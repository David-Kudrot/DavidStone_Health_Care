[
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "EmailMultiAlternatives",
        "importPath": "django.core.mail",
        "description": "django.core.mail",
        "isExtraImport": true,
        "detail": "django.core.mail",
        "documentation": {}
    },
    {
        "label": "render_to_string",
        "importPath": "django.template.loader",
        "description": "django.template.loader",
        "isExtraImport": true,
        "detail": "django.template.loader",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "Patient",
        "importPath": "patient.models",
        "description": "patient.models",
        "isExtraImport": true,
        "detail": "patient.models",
        "documentation": {}
    },
    {
        "label": "Patient",
        "importPath": "patient.models",
        "description": "patient.models",
        "isExtraImport": true,
        "detail": "patient.models",
        "documentation": {}
    },
    {
        "label": "Doctor",
        "importPath": "doctor.models",
        "description": "doctor.models",
        "isExtraImport": true,
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "AvailableTime",
        "importPath": "doctor.models",
        "description": "doctor.models",
        "isExtraImport": true,
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "AppointmentAdmin",
        "kind": 6,
        "importPath": "appointment.admin",
        "description": "appointment.admin",
        "peekOfCode": "class AppointmentAdmin(admin.ModelAdmin):\n    list_display = ['doctor_name', 'patient_name', 'appointment_types', 'appointment_status', 'symptom', 'time', 'cancel']\n    def patient_name(self,obj):\n        return obj.patient.user.first_name\n    def doctor_name(self,obj):\n        return obj.doctor.user.first_name\n    def save_model(self, request, obj, form, change):\n        obj.save()\n        if obj.appointment_status == \"Running\" and obj.appointment_types == \"Online\":\n            email_subject = \"Your Online Appointment is Running\"",
        "detail": "appointment.admin",
        "documentation": {}
    },
    {
        "label": "AppointmentConfig",
        "kind": 6,
        "importPath": "appointment.apps",
        "description": "appointment.apps",
        "peekOfCode": "class AppointmentConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'appointment'",
        "detail": "appointment.apps",
        "documentation": {}
    },
    {
        "label": "Appointment",
        "kind": 6,
        "importPath": "appointment.models",
        "description": "appointment.models",
        "peekOfCode": "class Appointment(models.Model):\n    patient = models.ForeignKey(Patient, on_delete = models.CASCADE)\n    doctor = models.ForeignKey(Doctor, on_delete = models.CASCADE)\n    appointment_types = models.CharField(choices = APPOINTMENT_TYPES, max_length = 10)\n    appointment_status = models.CharField(choices = APPOINTMENT_STATUS, max_length = 10, default = \"Pending\")\n    symptom = models.TextField()\n    time = models.ForeignKey(AvailableTime, on_delete = models.CASCADE)\n    cancel = models.BooleanField(default = False)\n    def __str__(self):\n        return f\"Doctor : {self.doctor.user.first_name} , Patient : {self.patient.user.first_name}\"",
        "detail": "appointment.models",
        "documentation": {}
    },
    {
        "label": "APPOINTMENT_STATUS",
        "kind": 5,
        "importPath": "appointment.models",
        "description": "appointment.models",
        "peekOfCode": "APPOINTMENT_STATUS = [\n    ('Completed', 'Completed'),\n    ('Pending', 'Pending'),\n    ('Running', 'Running'),\n]\nAPPOINTMENT_TYPES = [\n    ('Offline', 'Offline'),\n    ('Online', 'Online'),\n]\nclass Appointment(models.Model):",
        "detail": "appointment.models",
        "documentation": {}
    },
    {
        "label": "APPOINTMENT_TYPES",
        "kind": 5,
        "importPath": "appointment.models",
        "description": "appointment.models",
        "peekOfCode": "APPOINTMENT_TYPES = [\n    ('Offline', 'Offline'),\n    ('Online', 'Online'),\n]\nclass Appointment(models.Model):\n    patient = models.ForeignKey(Patient, on_delete = models.CASCADE)\n    doctor = models.ForeignKey(Doctor, on_delete = models.CASCADE)\n    appointment_types = models.CharField(choices = APPOINTMENT_TYPES, max_length = 10)\n    appointment_status = models.CharField(choices = APPOINTMENT_STATUS, max_length = 10, default = \"Pending\")\n    symptom = models.TextField()",
        "detail": "appointment.models",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "contact_us.migrations.0001_initial",
        "description": "contact_us.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='ContactUs',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=50)),",
        "detail": "contact_us.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "ContactModelAdmin",
        "kind": 6,
        "importPath": "contact_us.admin",
        "description": "contact_us.admin",
        "peekOfCode": "class ContactModelAdmin(admin.ModelAdmin):\n    list_display = ['name', 'phone_no', 'problem'] # admin a ei list a dekhabe\nadmin.site.register(ContactUs, ContactModelAdmin)",
        "detail": "contact_us.admin",
        "documentation": {}
    },
    {
        "label": "ContactUsConfig",
        "kind": 6,
        "importPath": "contact_us.apps",
        "description": "contact_us.apps",
        "peekOfCode": "class ContactUsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'contact_us'",
        "detail": "contact_us.apps",
        "documentation": {}
    },
    {
        "label": "ContactUs",
        "kind": 6,
        "importPath": "contact_us.models",
        "description": "contact_us.models",
        "peekOfCode": "class ContactUs(models.Model):\n    name = models.CharField(max_length=50)\n    phone_no = models.CharField(max_length=15)\n    problem = models.TextField()\n    def __str__(self):\n        return self.name\n    class Meta:\n        verbose_name_plural = \"Contact Us\" # admin panel a Contact Uss hoye jawar jonno verbose name plural use kora holo, jate Contact Us hoy",
        "detail": "contact_us.models",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "DavidStone_Health_Care.asgi",
        "description": "DavidStone_Health_Care.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "DavidStone_Health_Care.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "DavidStone_Health_Care.settings",
        "description": "DavidStone_Health_Care.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-vx_x7fsm&82@_5ljud9qwsbi-d9f8kd-tsh@+6s4h0rwya&wm&'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "DavidStone_Health_Care.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "DavidStone_Health_Care.settings",
        "description": "DavidStone_Health_Care.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-vx_x7fsm&82@_5ljud9qwsbi-d9f8kd-tsh@+6s4h0rwya&wm&'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "DavidStone_Health_Care.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "DavidStone_Health_Care.settings",
        "description": "DavidStone_Health_Care.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "DavidStone_Health_Care.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "DavidStone_Health_Care.settings",
        "description": "DavidStone_Health_Care.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'doctor',",
        "detail": "DavidStone_Health_Care.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "DavidStone_Health_Care.settings",
        "description": "DavidStone_Health_Care.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'doctor',\n    'patient',\n    'appointment',",
        "detail": "DavidStone_Health_Care.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "DavidStone_Health_Care.settings",
        "description": "DavidStone_Health_Care.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'DavidStone_Health_Care.urls'",
        "detail": "DavidStone_Health_Care.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "DavidStone_Health_Care.settings",
        "description": "DavidStone_Health_Care.settings",
        "peekOfCode": "ROOT_URLCONF = 'DavidStone_Health_Care.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "DavidStone_Health_Care.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "DavidStone_Health_Care.settings",
        "description": "DavidStone_Health_Care.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "DavidStone_Health_Care.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "DavidStone_Health_Care.settings",
        "description": "DavidStone_Health_Care.settings",
        "peekOfCode": "WSGI_APPLICATION = 'DavidStone_Health_Care.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "DavidStone_Health_Care.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "DavidStone_Health_Care.settings",
        "description": "DavidStone_Health_Care.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "DavidStone_Health_Care.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "DavidStone_Health_Care.settings",
        "description": "DavidStone_Health_Care.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "DavidStone_Health_Care.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "DavidStone_Health_Care.settings",
        "description": "DavidStone_Health_Care.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nMEDIA_URL = 'media/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field",
        "detail": "DavidStone_Health_Care.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "DavidStone_Health_Care.settings",
        "description": "DavidStone_Health_Care.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nMEDIA_URL = 'media/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "DavidStone_Health_Care.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "DavidStone_Health_Care.settings",
        "description": "DavidStone_Health_Care.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nMEDIA_URL = 'media/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "DavidStone_Health_Care.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "DavidStone_Health_Care.settings",
        "description": "DavidStone_Health_Care.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nMEDIA_URL = 'media/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "DavidStone_Health_Care.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "DavidStone_Health_Care.settings",
        "description": "DavidStone_Health_Care.settings",
        "peekOfCode": "STATIC_URL = 'static/'\nMEDIA_URL = 'media/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "DavidStone_Health_Care.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "DavidStone_Health_Care.settings",
        "description": "DavidStone_Health_Care.settings",
        "peekOfCode": "MEDIA_URL = 'media/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "DavidStone_Health_Care.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "DavidStone_Health_Care.settings",
        "description": "DavidStone_Health_Care.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "DavidStone_Health_Care.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "DavidStone_Health_Care.urls",
        "description": "DavidStone_Health_Care.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n]\nurlpatterns += static(settings.MEDIA_URL, document_root = settings.MEDIA_ROOT)",
        "detail": "DavidStone_Health_Care.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "DavidStone_Health_Care.wsgi",
        "description": "DavidStone_Health_Care.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "DavidStone_Health_Care.wsgi",
        "documentation": {}
    },
    {
        "label": "SpecializationAdmin",
        "kind": 6,
        "importPath": "doctor.admin",
        "description": "doctor.admin",
        "peekOfCode": "class SpecializationAdmin(admin.ModelAdmin):\n    prepopulated_fields = {'slug': ('name',), }\nclass DesignationAdmin(admin.ModelAdmin):\n    prepopulated_fields = {'slug': ('name',), }\nadmin.site.register(models.Specialization, SpecializationAdmin)\nadmin.site.register(models.Designation, DesignationAdmin)\nadmin.site.register(models.Doctor)\nadmin.site.register(models.Review)",
        "detail": "doctor.admin",
        "documentation": {}
    },
    {
        "label": "DesignationAdmin",
        "kind": 6,
        "importPath": "doctor.admin",
        "description": "doctor.admin",
        "peekOfCode": "class DesignationAdmin(admin.ModelAdmin):\n    prepopulated_fields = {'slug': ('name',), }\nadmin.site.register(models.Specialization, SpecializationAdmin)\nadmin.site.register(models.Designation, DesignationAdmin)\nadmin.site.register(models.Doctor)\nadmin.site.register(models.Review)",
        "detail": "doctor.admin",
        "documentation": {}
    },
    {
        "label": "DoctorConfig",
        "kind": 6,
        "importPath": "doctor.apps",
        "description": "doctor.apps",
        "peekOfCode": "class DoctorConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'doctor'",
        "detail": "doctor.apps",
        "documentation": {}
    },
    {
        "label": "Specialization",
        "kind": 6,
        "importPath": "doctor.models",
        "description": "doctor.models",
        "peekOfCode": "class Specialization(models.Model):\n    name = models.CharField(max_length=100)\n    slug = models.SlugField(max_length=100)\n    def __str__(self):\n        return self.name\nclass Designation(models.Model):\n    name = models.CharField(max_length=100)\n    slug = models.SlugField(max_length=100)\n    def __str__(self):\n        return self.name",
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "Designation",
        "kind": 6,
        "importPath": "doctor.models",
        "description": "doctor.models",
        "peekOfCode": "class Designation(models.Model):\n    name = models.CharField(max_length=100)\n    slug = models.SlugField(max_length=100)\n    def __str__(self):\n        return self.name\nclass AvailableTime(models.Model):\n    name = models.CharField(max_length=100)\n    def __str__(self):\n        return self.name\nclass Doctor(models.Model):",
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "AvailableTime",
        "kind": 6,
        "importPath": "doctor.models",
        "description": "doctor.models",
        "peekOfCode": "class AvailableTime(models.Model):\n    name = models.CharField(max_length=100)\n    def __str__(self):\n        return self.name\nclass Doctor(models.Model):\n    user = models.OneToOneField(User, on_delete=models.CASCADE)\n    image = models.ImageField(upload_to='doctor/images')\n    designation = models.ManyToManyField(Designation)\n    specialization = models.ManyToManyField(Specialization)\n    available_time = models.ManyToManyField(AvailableTime)",
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "Doctor",
        "kind": 6,
        "importPath": "doctor.models",
        "description": "doctor.models",
        "peekOfCode": "class Doctor(models.Model):\n    user = models.OneToOneField(User, on_delete=models.CASCADE)\n    image = models.ImageField(upload_to='doctor/images')\n    designation = models.ManyToManyField(Designation)\n    specialization = models.ManyToManyField(Specialization)\n    available_time = models.ManyToManyField(AvailableTime)\n    fee = models.IntegerField()\n    meeting_link = models.CharField(max_length=150)\n    def __str__(self):\n        return f\"{self.user.first_name} {self.user.last_name}\"",
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "Review",
        "kind": 6,
        "importPath": "doctor.models",
        "description": "doctor.models",
        "peekOfCode": "class Review(models.Model):\n    reviewer = models.ForeignKey(Patient, on_delete = models.CASCADE)\n    doctor = models.ForeignKey(Doctor, on_delete = models.CASCADE)\n    body = models.TextField()\n    created = models.DateTimeField(auto_now_add = True)\n    rating = models.CharField(choices = STAR_CHOICES, max_length = 10)\n    def __str__(self):\n        return f\"{self.reviewer.user.first_name} {self.reviewer.user.last_name}\"",
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "STAR_CHOICES",
        "kind": 5,
        "importPath": "doctor.models",
        "description": "doctor.models",
        "peekOfCode": "STAR_CHOICES = [\n    ('⭐', '⭐'),\n    ('⭐⭐', '⭐⭐'),\n    ('⭐⭐⭐', '⭐⭐⭐'),\n    ('⭐⭐⭐⭐', '⭐⭐⭐⭐'),\n    ('⭐⭐⭐⭐⭐', '⭐⭐⭐⭐⭐'),\n]\nclass Review(models.Model):\n    reviewer = models.ForeignKey(Patient, on_delete = models.CASCADE)\n    doctor = models.ForeignKey(Doctor, on_delete = models.CASCADE)",
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "PatientAdmin",
        "kind": 6,
        "importPath": "patient.admin",
        "description": "patient.admin",
        "peekOfCode": "class PatientAdmin(admin.ModelAdmin):\n    list_display = ['first_name', 'last_name', 'phone_no', 'email']\n    def first_name(self, obj): # jehetu user foreign key tai user theke first_name pete gele obj.user.first_name likhate hobe\n        return obj.user.first_name\n    def last_name(self, obj):\n        return obj.user.last_name\nadmin.site.register(Patient, PatientAdmin)",
        "detail": "patient.admin",
        "documentation": {}
    },
    {
        "label": "PatientConfig",
        "kind": 6,
        "importPath": "patient.apps",
        "description": "patient.apps",
        "peekOfCode": "class PatientConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'patient'",
        "detail": "patient.apps",
        "documentation": {}
    },
    {
        "label": "Patient",
        "kind": 6,
        "importPath": "patient.models",
        "description": "patient.models",
        "peekOfCode": "class Patient(models.Model):\n    user = models.OneToOneField(User, on_delete=models.CASCADE)\n    image = models.ImageField(upload_to=\"patient/images\")\n    phone_no = models.CharField(max_length=15)\n    def __int__(self):\n        return f\"{self.user.first_name} {self.user.last_name}\"",
        "detail": "patient.models",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "service.migrations.0001_initial",
        "description": "service.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='ServiceModel',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=100)),",
        "detail": "service.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "ServiceConfig",
        "kind": 6,
        "importPath": "service.apps",
        "description": "service.apps",
        "peekOfCode": "class ServiceConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'service'",
        "detail": "service.apps",
        "documentation": {}
    },
    {
        "label": "ServiceModel",
        "kind": 6,
        "importPath": "service.models",
        "description": "service.models",
        "peekOfCode": "class ServiceModel(models.Model):\n    name = models.CharField(max_length=100)\n    description = models.TextField()\n    image = models.ImageField(upload_to=\"service/images\")",
        "detail": "service.models",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'DavidStone_Health_Care.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]